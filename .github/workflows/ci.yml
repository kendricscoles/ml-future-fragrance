name: CI

on:
  push:
    branches: ["**"]
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "**.png"
      - "**.pdf"
  pull_request:
    branches: ["**"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PYTHONUNBUFFERED: "1"
      MPLBACKEND: Agg
      CI: "1"  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install pytest
          pip install -r requirements-dev.txt

      - name: Unit tests (quick)
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -euo pipefail
          pytest -q --maxfail=1

      - name: Run full pipeline (smoke)
        run: |
          set -euo pipefail
          make run-all

      - name: Upload figures
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: figures-${{ github.run_id }}
          path: reports/figures/
          if-no-files-found: warn
          retention-days: 30

      - name: Upload metrics and predictions
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.run_id }}
          path: |
            artifacts/metrics.json
            artifacts/predictions.csv
            reports/metrics_summary.csv
            reports/lift_by_decile.csv
            reports/fairness_age_group.csv
            reports/shap_top_features.csv
          if-no-files-found: warn
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "## Smoke Summary" >> $GITHUB_STEP_SUMMARY
          if [ -f artifacts/metrics.json ]; then
            echo '' >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat artifacts/metrics.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "- No metrics.json produced." >> $GITHUB_STEP_SUMMARY
          fi
